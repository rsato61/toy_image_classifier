--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=31 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 17.0 cbx_cycloneii 2017:04:25:18:06:29:SJ cbx_lpm_add_sub 2017:04:25:18:06:29:SJ cbx_lpm_compare 2017:04:25:18:06:29:SJ cbx_lpm_decode 2017:04:25:18:06:29:SJ cbx_mgl 2017:04:25:18:09:28:SJ cbx_nadder 2017:04:25:18:06:30:SJ cbx_stratix 2017:04:25:18:06:30:SJ cbx_stratixii 2017:04:25:18:06:30:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_rma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[30..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[30..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode8043w[2..0]	: WIRE;
	w_anode8056w[3..0]	: WIRE;
	w_anode8073w[3..0]	: WIRE;
	w_anode8083w[3..0]	: WIRE;
	w_anode8093w[3..0]	: WIRE;
	w_anode8103w[3..0]	: WIRE;
	w_anode8113w[3..0]	: WIRE;
	w_anode8123w[3..0]	: WIRE;
	w_anode8133w[3..0]	: WIRE;
	w_anode8145w[2..0]	: WIRE;
	w_anode8154w[3..0]	: WIRE;
	w_anode8165w[3..0]	: WIRE;
	w_anode8175w[3..0]	: WIRE;
	w_anode8185w[3..0]	: WIRE;
	w_anode8195w[3..0]	: WIRE;
	w_anode8205w[3..0]	: WIRE;
	w_anode8215w[3..0]	: WIRE;
	w_anode8225w[3..0]	: WIRE;
	w_anode8236w[2..0]	: WIRE;
	w_anode8245w[3..0]	: WIRE;
	w_anode8256w[3..0]	: WIRE;
	w_anode8266w[3..0]	: WIRE;
	w_anode8276w[3..0]	: WIRE;
	w_anode8286w[3..0]	: WIRE;
	w_anode8296w[3..0]	: WIRE;
	w_anode8306w[3..0]	: WIRE;
	w_anode8316w[3..0]	: WIRE;
	w_anode8327w[2..0]	: WIRE;
	w_anode8336w[3..0]	: WIRE;
	w_anode8347w[3..0]	: WIRE;
	w_anode8357w[3..0]	: WIRE;
	w_anode8367w[3..0]	: WIRE;
	w_anode8377w[3..0]	: WIRE;
	w_anode8387w[3..0]	: WIRE;
	w_anode8397w[3..0]	: WIRE;
	w_anode8407w[3..0]	: WIRE;
	w_data8041w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[30..0] = eq_wire[30..0];
	eq_wire[] = ( ( w_anode8407w[3..3], w_anode8397w[3..3], w_anode8387w[3..3], w_anode8377w[3..3], w_anode8367w[3..3], w_anode8357w[3..3], w_anode8347w[3..3], w_anode8336w[3..3]), ( w_anode8316w[3..3], w_anode8306w[3..3], w_anode8296w[3..3], w_anode8286w[3..3], w_anode8276w[3..3], w_anode8266w[3..3], w_anode8256w[3..3], w_anode8245w[3..3]), ( w_anode8225w[3..3], w_anode8215w[3..3], w_anode8205w[3..3], w_anode8195w[3..3], w_anode8185w[3..3], w_anode8175w[3..3], w_anode8165w[3..3], w_anode8154w[3..3]), ( w_anode8133w[3..3], w_anode8123w[3..3], w_anode8113w[3..3], w_anode8103w[3..3], w_anode8093w[3..3], w_anode8083w[3..3], w_anode8073w[3..3], w_anode8056w[3..3]));
	w_anode8043w[] = ( (w_anode8043w[1..1] & (! data_wire[4..4])), (w_anode8043w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8056w[] = ( (w_anode8056w[2..2] & (! w_data8041w[2..2])), (w_anode8056w[1..1] & (! w_data8041w[1..1])), (w_anode8056w[0..0] & (! w_data8041w[0..0])), w_anode8043w[2..2]);
	w_anode8073w[] = ( (w_anode8073w[2..2] & (! w_data8041w[2..2])), (w_anode8073w[1..1] & (! w_data8041w[1..1])), (w_anode8073w[0..0] & w_data8041w[0..0]), w_anode8043w[2..2]);
	w_anode8083w[] = ( (w_anode8083w[2..2] & (! w_data8041w[2..2])), (w_anode8083w[1..1] & w_data8041w[1..1]), (w_anode8083w[0..0] & (! w_data8041w[0..0])), w_anode8043w[2..2]);
	w_anode8093w[] = ( (w_anode8093w[2..2] & (! w_data8041w[2..2])), (w_anode8093w[1..1] & w_data8041w[1..1]), (w_anode8093w[0..0] & w_data8041w[0..0]), w_anode8043w[2..2]);
	w_anode8103w[] = ( (w_anode8103w[2..2] & w_data8041w[2..2]), (w_anode8103w[1..1] & (! w_data8041w[1..1])), (w_anode8103w[0..0] & (! w_data8041w[0..0])), w_anode8043w[2..2]);
	w_anode8113w[] = ( (w_anode8113w[2..2] & w_data8041w[2..2]), (w_anode8113w[1..1] & (! w_data8041w[1..1])), (w_anode8113w[0..0] & w_data8041w[0..0]), w_anode8043w[2..2]);
	w_anode8123w[] = ( (w_anode8123w[2..2] & w_data8041w[2..2]), (w_anode8123w[1..1] & w_data8041w[1..1]), (w_anode8123w[0..0] & (! w_data8041w[0..0])), w_anode8043w[2..2]);
	w_anode8133w[] = ( (w_anode8133w[2..2] & w_data8041w[2..2]), (w_anode8133w[1..1] & w_data8041w[1..1]), (w_anode8133w[0..0] & w_data8041w[0..0]), w_anode8043w[2..2]);
	w_anode8145w[] = ( (w_anode8145w[1..1] & (! data_wire[4..4])), (w_anode8145w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8154w[] = ( (w_anode8154w[2..2] & (! w_data8041w[2..2])), (w_anode8154w[1..1] & (! w_data8041w[1..1])), (w_anode8154w[0..0] & (! w_data8041w[0..0])), w_anode8145w[2..2]);
	w_anode8165w[] = ( (w_anode8165w[2..2] & (! w_data8041w[2..2])), (w_anode8165w[1..1] & (! w_data8041w[1..1])), (w_anode8165w[0..0] & w_data8041w[0..0]), w_anode8145w[2..2]);
	w_anode8175w[] = ( (w_anode8175w[2..2] & (! w_data8041w[2..2])), (w_anode8175w[1..1] & w_data8041w[1..1]), (w_anode8175w[0..0] & (! w_data8041w[0..0])), w_anode8145w[2..2]);
	w_anode8185w[] = ( (w_anode8185w[2..2] & (! w_data8041w[2..2])), (w_anode8185w[1..1] & w_data8041w[1..1]), (w_anode8185w[0..0] & w_data8041w[0..0]), w_anode8145w[2..2]);
	w_anode8195w[] = ( (w_anode8195w[2..2] & w_data8041w[2..2]), (w_anode8195w[1..1] & (! w_data8041w[1..1])), (w_anode8195w[0..0] & (! w_data8041w[0..0])), w_anode8145w[2..2]);
	w_anode8205w[] = ( (w_anode8205w[2..2] & w_data8041w[2..2]), (w_anode8205w[1..1] & (! w_data8041w[1..1])), (w_anode8205w[0..0] & w_data8041w[0..0]), w_anode8145w[2..2]);
	w_anode8215w[] = ( (w_anode8215w[2..2] & w_data8041w[2..2]), (w_anode8215w[1..1] & w_data8041w[1..1]), (w_anode8215w[0..0] & (! w_data8041w[0..0])), w_anode8145w[2..2]);
	w_anode8225w[] = ( (w_anode8225w[2..2] & w_data8041w[2..2]), (w_anode8225w[1..1] & w_data8041w[1..1]), (w_anode8225w[0..0] & w_data8041w[0..0]), w_anode8145w[2..2]);
	w_anode8236w[] = ( (w_anode8236w[1..1] & data_wire[4..4]), (w_anode8236w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8245w[] = ( (w_anode8245w[2..2] & (! w_data8041w[2..2])), (w_anode8245w[1..1] & (! w_data8041w[1..1])), (w_anode8245w[0..0] & (! w_data8041w[0..0])), w_anode8236w[2..2]);
	w_anode8256w[] = ( (w_anode8256w[2..2] & (! w_data8041w[2..2])), (w_anode8256w[1..1] & (! w_data8041w[1..1])), (w_anode8256w[0..0] & w_data8041w[0..0]), w_anode8236w[2..2]);
	w_anode8266w[] = ( (w_anode8266w[2..2] & (! w_data8041w[2..2])), (w_anode8266w[1..1] & w_data8041w[1..1]), (w_anode8266w[0..0] & (! w_data8041w[0..0])), w_anode8236w[2..2]);
	w_anode8276w[] = ( (w_anode8276w[2..2] & (! w_data8041w[2..2])), (w_anode8276w[1..1] & w_data8041w[1..1]), (w_anode8276w[0..0] & w_data8041w[0..0]), w_anode8236w[2..2]);
	w_anode8286w[] = ( (w_anode8286w[2..2] & w_data8041w[2..2]), (w_anode8286w[1..1] & (! w_data8041w[1..1])), (w_anode8286w[0..0] & (! w_data8041w[0..0])), w_anode8236w[2..2]);
	w_anode8296w[] = ( (w_anode8296w[2..2] & w_data8041w[2..2]), (w_anode8296w[1..1] & (! w_data8041w[1..1])), (w_anode8296w[0..0] & w_data8041w[0..0]), w_anode8236w[2..2]);
	w_anode8306w[] = ( (w_anode8306w[2..2] & w_data8041w[2..2]), (w_anode8306w[1..1] & w_data8041w[1..1]), (w_anode8306w[0..0] & (! w_data8041w[0..0])), w_anode8236w[2..2]);
	w_anode8316w[] = ( (w_anode8316w[2..2] & w_data8041w[2..2]), (w_anode8316w[1..1] & w_data8041w[1..1]), (w_anode8316w[0..0] & w_data8041w[0..0]), w_anode8236w[2..2]);
	w_anode8327w[] = ( (w_anode8327w[1..1] & data_wire[4..4]), (w_anode8327w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8336w[] = ( (w_anode8336w[2..2] & (! w_data8041w[2..2])), (w_anode8336w[1..1] & (! w_data8041w[1..1])), (w_anode8336w[0..0] & (! w_data8041w[0..0])), w_anode8327w[2..2]);
	w_anode8347w[] = ( (w_anode8347w[2..2] & (! w_data8041w[2..2])), (w_anode8347w[1..1] & (! w_data8041w[1..1])), (w_anode8347w[0..0] & w_data8041w[0..0]), w_anode8327w[2..2]);
	w_anode8357w[] = ( (w_anode8357w[2..2] & (! w_data8041w[2..2])), (w_anode8357w[1..1] & w_data8041w[1..1]), (w_anode8357w[0..0] & (! w_data8041w[0..0])), w_anode8327w[2..2]);
	w_anode8367w[] = ( (w_anode8367w[2..2] & (! w_data8041w[2..2])), (w_anode8367w[1..1] & w_data8041w[1..1]), (w_anode8367w[0..0] & w_data8041w[0..0]), w_anode8327w[2..2]);
	w_anode8377w[] = ( (w_anode8377w[2..2] & w_data8041w[2..2]), (w_anode8377w[1..1] & (! w_data8041w[1..1])), (w_anode8377w[0..0] & (! w_data8041w[0..0])), w_anode8327w[2..2]);
	w_anode8387w[] = ( (w_anode8387w[2..2] & w_data8041w[2..2]), (w_anode8387w[1..1] & (! w_data8041w[1..1])), (w_anode8387w[0..0] & w_data8041w[0..0]), w_anode8327w[2..2]);
	w_anode8397w[] = ( (w_anode8397w[2..2] & w_data8041w[2..2]), (w_anode8397w[1..1] & w_data8041w[1..1]), (w_anode8397w[0..0] & (! w_data8041w[0..0])), w_anode8327w[2..2]);
	w_anode8407w[] = ( (w_anode8407w[2..2] & w_data8041w[2..2]), (w_anode8407w[1..1] & w_data8041w[1..1]), (w_anode8407w[0..0] & w_data8041w[0..0]), w_anode8327w[2..2]);
	w_data8041w[2..0] = data_wire[2..0];
END;
--VALID FILE
